{
    "name": "symfony/serializer",
    "type": "library",
    "description": "Handles serializing and deserializing data structures, including object graphs, into array structures or other formats like XML and JSON.",
    "keywords": [],
    "homepage": "https://symfony.com",
    "license": "MIT",
    "authors": [
        {
            "name": "Fabien Potencier",
            "email": "fabien@symfony.com"
        },
        {
            "name": "Symfony Community",
            "homepage": "https://symfony.com/contributors"
        }
    ],
    "require": {
        "php": ">=8.2",
        "phpstan/phpdoc-parser": "^1.16",
        "phpdocumentor/reflection-docblock": "^3.2|^4.0|^5.0",
        "psr/cache": "^3.0",
        "psr/container": "^3.0",
        "psr/log": "^3.0",
        "symfony/polyfill-ctype": "~1.8",
        "symfony/var-exporter": "^6.3"
    },
    "require-dev": {
        "doctrine/annotations": "^1.12|^2",
        "symfony/cache": "^6.4|^7.0",
        "symfony/config": "^6.4|^7.0",
        "symfony/console": "^6.4|^7.0",
        "symfony/dependency-injection": "^6.4|^7.0",
        "symfony/error-handler": "^6.4|^7.0",
        "symfony/filesystem": "^6.4|^7.0",
        "symfony/form": "^6.4|^7.0",
        "symfony/http-foundation": "^6.4|^7.0",
        "symfony/http-kernel": "^6.4|^7.0",
        "symfony/mime": "^6.4|^7.0",
        "symfony/property-access": "^6.4|^7.0",
        "symfony/property-info": "^6.4|^7.0",
        "symfony/uid": "^6.4|^7.0",
        "symfony/validator": "^6.4|^7.0",
        "symfony/var-dumper": "^6.4|^7.0",
        "symfony/var-exporter": "^6.4|^7.0",
        "symfony/yaml": "^6.4|^7.0"
    },
    "conflict": {
        "doctrine/annotations": "<1.12",
        "phpdocumentor/reflection-docblock": "<3.2.2",
        "phpdocumentor/type-resolver": "<1.4.0",
        "symfony/dependency-injection": "<6.4",
        "symfony/property-access": "<6.4",
        "symfony/property-info": "<6.4",
        "symfony/uid": "<6.4",
        "symfony/yaml": "<6.4"
    },
    "suggest": {
        "psr/cache-implementation": "To cache results"
    },
    "autoload": {
        "psr-4": { "Symfony\\Component\\Serializer\\": "" },
        "files": [ "Resources/functions.php" ],
        "exclude-from-classmap": [ "/Tests/" ]
    },
    "minimum-stability": "dev"
}
